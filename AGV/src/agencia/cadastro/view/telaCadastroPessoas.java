/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agencia.cadastro.view;

import agencia.control.ValidaCadastro;
import javax.swing.JOptionPane;
import agencia.control.ChecaInfoPessoas;
import agencia.model.Cliente;
import projetolab.EscreveArquivo;
import agencia.model.Funcionario;
import projetolab.PaginaInicial;
import agencia.model.Pessoas;
import projetolab.Viagem;



/**
 *
 * @author Leo
 */
public class telaCadastroPessoas extends javax.swing.JFrame {

    Pessoas[] pessoas = new Pessoas[100];
    Viagem[] viagens = new Viagem[100];
    //Variaveis para guarda o cargo,login e setor de quem está no sistema
    private String cargo;
    private String login;
    private String setor;
    //Variaveis para guardar o login e senha do sistema
    EscreveArquivo WriteFile = new EscreveArquivo(pessoas, viagens);
    ValidaCadastro validaCadastro = new ValidaCadastro();

    /**
     * Creates new form telaCadastroPessoas
     */
	//Construtor da classe
    public telaCadastroPessoas(String cargo, String login, String setor, Pessoas[] pessoas, Viagem[] viagens) {
		//Pego as informações do usuário logado
        this.viagens = viagens;
        this.pessoas = pessoas;
        this.cargo = cargo;
        this.login = login;
        this.setor = setor;
        this.setTitle("Cadastro de pessoas");
        //Bloqueo o fechamento pelo botão FECHAR
        this.setUndecorated(true);
        //this.setExtendedState(MAXIMIZED_BOTH);
        initComponents();
        this.setSize(740, 250);//nao ta funcionando
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        //Seleciono os itens que irão aparecer no meu comboBox
        ComboBoxSetor.removeAllItems();
        ComboBoxCargo.removeAllItems();
        ComboBoxSetor.addItem("Selecionar");
        ComboBoxCargo.addItem("Selecionar");
        ComboBoxSetor.addItem("Documentos");
        ComboBoxSetor.addItem("Financeiro");
        ComboBoxSetor.addItem("Eventos");
        ComboBoxCargo.addItem("Coordenador");
        ComboBoxCargo.addItem("Assessor");
        //Deixo tudo invisivel para caso nao seja funcionario
        labelSetor.setVisible(false);
        labelCargo.setVisible(false);
        ComboBoxSetor.setVisible(false);
        ComboBoxCargo.setVisible(false);
        labelLogin.setVisible(false);
        textFieldLogin.setVisible(false);
        PasswordFieldSenha.setVisible(false);
        passwordFieldConfirmacaoSenha.setVisible(false);
        labelSenha.setVisible(false);
        labelConfirmacaoSenha.setVisible(false);

    }

    private telaCadastroPessoas() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNome = new javax.swing.JLabel();
        labelCPF = new javax.swing.JLabel();
        labelEmail = new javax.swing.JLabel();
        textFieldNome = new javax.swing.JTextField();
        textFieldCPF = new javax.swing.JTextField();
        textFieldEmail = new javax.swing.JTextField();
        buttonVoltar = new javax.swing.JButton();
        buttonCadastrar = new javax.swing.JButton();
        CheckBoxFuncionario = new javax.swing.JCheckBox();
        labelSetor = new javax.swing.JLabel();
        labelCargo = new javax.swing.JLabel();
        ComboBoxSetor = new javax.swing.JComboBox<>();
        ComboBoxCargo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        labelLogin = new javax.swing.JLabel();
        PasswordFieldSenha = new javax.swing.JPasswordField();
        textFieldLogin = new javax.swing.JTextField();
        labelSenha = new javax.swing.JLabel();
        labelConfirmacaoSenha = new javax.swing.JLabel();
        passwordFieldConfirmacaoSenha = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AGV - Cadastro de Pessoas");

        labelNome.setText("Nome:");

        labelCPF.setText("CPF:");

        labelEmail.setText("Email:");

        textFieldCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldCPFActionPerformed(evt);
            }
        });

        textFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldEmailActionPerformed(evt);
            }
        });

        buttonVoltar.setText("Voltar");
        buttonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVoltarActionPerformed(evt);
            }
        });

        buttonCadastrar.setText("Cadastrar");
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        CheckBoxFuncionario.setText("Funcionário");
        CheckBoxFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxFuncionarioActionPerformed(evt);
            }
        });

        labelSetor.setText("Setor:");

        labelCargo.setText("Cargo:");

        ComboBoxSetor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBoxSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxSetorActionPerformed(evt);
            }
        });

        ComboBoxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        labelLogin.setText("Login:");

        labelSenha.setText("Senha:");

        labelConfirmacaoSenha.setText("Confirmar senha:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNome)
                                    .addComponent(labelEmail)
                                    .addComponent(labelSetor)
                                    .addComponent(labelCargo)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelCPF)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(buttonCadastrar)
                                .addGap(34, 34, 34)
                                .addComponent(buttonVoltar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textFieldCPF, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textFieldEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ComboBoxSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addComponent(labelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(labelSenha)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textFieldLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                            .addComponent(PasswordFieldSenha)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addComponent(labelConfirmacaoSenha)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(passwordFieldConfirmacaoSenha))
                                    .addComponent(textFieldNome))
                                .addGap(86, 86, 86)))
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CheckBoxFuncionario)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(textFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCPF)
                            .addComponent(textFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEmail))
                .addGap(18, 18, 18)
                .addComponent(CheckBoxFuncionario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSetor)
                    .addComponent(ComboBoxSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLogin)
                    .addComponent(textFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCargo)
                    .addComponent(PasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSenha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConfirmacaoSenha)
                    .addComponent(passwordFieldConfirmacaoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonVoltar)
                    .addComponent(buttonCadastrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVoltarActionPerformed
        // Ação do botão voltar
        this.setVisible(false);
        PaginaInicial pg = new PaginaInicial(cargo, login, setor, pessoas, viagens);
        pg.setVisible(true);

    }//GEN-LAST:event_buttonVoltarActionPerformed

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed
        // Ação do botão cadastrarPessoas
        //Verifico se os campos obrigatórios não estão vazios
        ChecaInfoPessoas ch = new ChecaInfoPessoas();
        boolean entrou = false;
        if (!validaCadastro.validaCampos(textFieldNome.getText(), textFieldCPF.getText(), textFieldEmail.getText())) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos com *");
        } else if (ch.checarNome(textFieldNome.getText())) {
            JOptionPane.showMessageDialog(null, "Nome já cadastrado");
        } else {
            if (CheckBoxFuncionario.isSelected() == true) {
                //É um funcionario
                //Verifico se algum campo não está preenchido
                if (ComboBoxSetor.getSelectedItem().equals("Selecionar")
                        || ComboBoxCargo.getSelectedItem().equals("Selecionar") || textFieldLogin.getText().equals("")
                        || PasswordFieldSenha.getText().equals("") || passwordFieldConfirmacaoSenha.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Selecione o setor,cargo,login e senha");
                } //Verifico se as senhas são iguais
                else if (!validaCadastro.validaSenhas(PasswordFieldSenha.getText(), passwordFieldConfirmacaoSenha.getText())) {
                    JOptionPane.showMessageDialog(null, "Senhas não conferem");
                } else if (!validaCadastro.validacao(textFieldLogin.getText())) {
                    JOptionPane.showMessageDialog(null, "Login já existe");
                } else {
                    Funcionario f1 = new Funcionario();
                    //Passo todos os valores
                    f1.setNome(textFieldNome.getText());
                    f1.setCpf(textFieldCPF.getText());
                    f1.setEmail(textFieldEmail.getText());
                    f1.setSetor(ComboBoxSetor.getSelectedItem().toString());
                    f1.setCargo(ComboBoxCargo.getSelectedItem().toString());
                    f1.setLogin(textFieldLogin.getText());
                    f1.setSenha(PasswordFieldSenha.getText());
                    //Chamo o metodo para escrever no arquivo
                    WriteFile.escreverArquivo(f1);
                    entrou = true;

                }

            } else if (CheckBoxFuncionario.isSelected() == false) {
                //É um cliente normal
                Cliente c1 = new Cliente();
                c1.setNome(textFieldNome.getText());
                c1.setCpf(textFieldCPF.getText());
                c1.setEmail(textFieldEmail.getText());
                WriteFile.escreverArquivo(c1);
                entrou = true;
            }
            if (entrou) {
                JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso");
                this.setVisible(false);
                PaginaInicial pg = new PaginaInicial(cargo, login, setor, pessoas, viagens);
                pg.setVisible(true);
            }
        }
    }//GEN-LAST:event_buttonCadastrarActionPerformed

    private void CheckBoxFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxFuncionarioActionPerformed
        // Ações a tomar dependendo do estado do checkBoc
        if (CheckBoxFuncionario.isSelected() == true) {
            labelSetor.setVisible(true);
            labelCargo.setVisible(true);
            labelLogin.setVisible(true);
            labelSenha.setVisible(true);
            textFieldLogin.setVisible(true);
            PasswordFieldSenha.setVisible(true);
            passwordFieldConfirmacaoSenha.setVisible(true);
            labelConfirmacaoSenha.setVisible(true);
            ComboBoxSetor.setVisible(true);
            ComboBoxCargo.setVisible(true);
        } else {
            labelSetor.setVisible(false);
            labelCargo.setVisible(false);
            labelLogin.setVisible(false);
            textFieldLogin.setVisible(false);
            PasswordFieldSenha.setVisible(false);
            passwordFieldConfirmacaoSenha.setVisible(false);
            labelSenha.setVisible(false);
            labelConfirmacaoSenha.setVisible(false);
            ComboBoxSetor.setVisible(false);
            ComboBoxCargo.setVisible(false);
        }
    }//GEN-LAST:event_CheckBoxFuncionarioActionPerformed

    private void ComboBoxSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxSetorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxSetorActionPerformed

    private void textFieldCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldCPFActionPerformed

    private void textFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaCadastroPessoas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaCadastroPessoas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBoxFuncionario;
    private javax.swing.JComboBox<String> ComboBoxCargo;
    private javax.swing.JComboBox<String> ComboBoxSetor;
    private javax.swing.JPasswordField PasswordFieldSenha;
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JButton buttonVoltar;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel labelCPF;
    private javax.swing.JLabel labelCargo;
    private javax.swing.JLabel labelConfirmacaoSenha;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelSenha;
    private javax.swing.JLabel labelSetor;
    private javax.swing.JPasswordField passwordFieldConfirmacaoSenha;
    private javax.swing.JTextField textFieldCPF;
    private javax.swing.JTextField textFieldEmail;
    private javax.swing.JTextField textFieldLogin;
    private javax.swing.JTextField textFieldNome;
    // End of variables declaration//GEN-END:variables
}
